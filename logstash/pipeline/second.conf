input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.5.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://host.docker.internal:5432/logs"
    jdbc_user => "test"
    jdbc_password => "test"
    schedule => "* * * * *"
    use_column_value => true
    tracking_column => "id"
    tracking_column_type => "numeric"
    statement => "select id, identification, temp, country, st_asgeojson(coordinates) as coordinates from public.temperature where id > :sql_last_value order by id ASC"
  }
}

filter {
  json {
    source => "coordinates"
  }
  mutate {
    rename => [ "coordinates", "location" ]
  }
}

output {
  elasticsearch {
    hosts => ["https://elasticsearch:9200"]
    user => "elastic"
    password => "_S7HEGnUZo_*Mzs6yEcc"
    ssl => true
    ssl_certificate_verification => false
    cacert => "/etc/logstash/logstash.pem"
    index => "temperature"
    document_id => "%{identification}"
    doc_as_upsert => true
    manage_template => true
    # template_overwrite => true
    # template => "/usr/share/logstash/templates/temperature.template.json"
    template_name => "temperature"
 }

 stdout {
    codec => rubydebug
  }
}