input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate_authorities => ["/etc/logstash/es-ca.crt"]
    ssl_certificate => "/etc/logstash/logstash.crt"
    ssl_key => "/etc/logstash/logstash.pkcs8.key"
    ssl_verify_mode => "none"
  }
}

filter {
  json {
    source => "message"
  }
  grok {
    match => { "message" => "UUID: %{UUID:uuid} User: %{DATA:user} Class: %{DATA:class} Message: %{DATA:detalle}" }
  }
  date {
    match => ["timestamp", "UNIX_MS"]
    target => "@timestamp"
  }
  ruby {
    code => "event.set('indexDay', event.get('[@timestamp]').time.localtime.strftime('%Y%m%d'))"
  }
}

output {
  if [logger_name] == "custom-logs" {
    elasticsearch {
      hosts => ["https://elasticsearch:9200"]
      user => "elastic"
      password => "_S7HEGnUZo_*Mzs6yEcc"
      ssl => true
      ssl_certificate_verification => false
      cacert => "/etc/logstash/logstash.pem"
      # template => "/usr/share/logstash/templates/custom-logs.template.json"
      # template_name => "custom-logs"
      # template_overwrite => true
      index => "custom-logs-%{indexDay}"
      codec => json
      document_id => "%{[@timestamp]}%{[uuid]}"
    }
  }
  stdout {
    codec => rubydebug
  }
}
